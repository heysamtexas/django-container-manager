name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test:
    name: Test package ðŸ§ª
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: "latest"
    - name: Install dependencies and run tests
      run: |
        uv sync --extra dev
        uv run python manage.py test
    - name: Run code quality checks
      run: |
        uv run ruff check .
        uv run ruff format --check .

  publish-to-pypi:
    name: Publish to PyPI ðŸš€
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    - test
    runs-on: ubuntu-latest
    # environment: pypi  # Temporarily disabled for initial publication
    permissions:
      id-token: write  # MANDATORY: needed for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and upload to GitHub Release ðŸ“‹
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # MANDATORY: for creating releases
      id-token: write  # MANDATORY: for sigstore
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'