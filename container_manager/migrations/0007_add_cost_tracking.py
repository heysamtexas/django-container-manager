# Generated by Django 5.2.4 on 2025-07-26 13:14

import uuid
from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("container_manager", "0006_add_routing_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="CostBudget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "executor_types",
                    models.JSONField(
                        default=list,
                        help_text="List of executor types to include (empty = all)",
                    ),
                ),
                (
                    "regions",
                    models.JSONField(
                        default=list,
                        help_text="List of regions to include (empty = all)",
                    ),
                ),
                ("budget_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "warning_threshold",
                    models.FloatField(default=80.0, help_text="Warning at % of budget"),
                ),
                (
                    "critical_threshold",
                    models.FloatField(
                        default=95.0, help_text="Critical at % of budget"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Cost Budget",
                "verbose_name_plural": "Cost Budgets",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CostProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "executor_type",
                    models.CharField(
                        choices=[
                            ("docker", "Docker"),
                            ("cloudrun", "Cloud Run"),
                            ("fargate", "AWS Fargate"),
                            ("aks", "Azure Container Instances"),
                            ("mock", "Mock (Testing)"),
                        ],
                        max_length=50,
                    ),
                ),
                ("region", models.CharField(blank=True, max_length=50)),
                (
                    "cpu_cost_per_core_hour",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Cost per CPU core per hour",
                        max_digits=10,
                    ),
                ),
                (
                    "memory_cost_per_gb_hour",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Cost per GB memory per hour",
                        max_digits=10,
                    ),
                ),
                (
                    "storage_cost_per_gb_hour",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Cost per GB storage per hour",
                        max_digits=10,
                    ),
                ),
                (
                    "request_cost",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Cost per request/execution",
                        max_digits=10,
                    ),
                ),
                (
                    "network_cost_per_gb",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Cost per GB network egress",
                        max_digits=10,
                    ),
                ),
                (
                    "startup_cost",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.000000"),
                        help_text="Fixed startup cost per job",
                        max_digits=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British Pound"),
                            ("JPY", "Japanese Yen"),
                        ],
                        default="USD",
                        max_length=3,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "effective_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Cost Profile",
                "verbose_name_plural": "Cost Profiles",
                "ordering": ["executor_type", "region", "name"],
            },
        ),
        migrations.AddField(
            model_name="containerjob",
            name="cost_currency",
            field=models.CharField(default="USD", max_length=3),
        ),
        migrations.AddField(
            model_name="containerjob",
            name="cost_profile_id",
            field=models.UUIDField(
                blank=True, help_text="Cost profile used for this job", null=True
            ),
        ),
        migrations.AddField(
            model_name="containerjob",
            name="cost_tracking_started_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="ResourceUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_id", models.UUIDField(db_index=True)),
                ("cpu_cores_used", models.FloatField(default=0.0)),
                ("memory_mb_used", models.FloatField(default=0.0)),
                ("storage_mb_used", models.FloatField(default=0.0)),
                ("network_mb_in", models.FloatField(default=0.0)),
                ("network_mb_out", models.FloatField(default=0.0)),
                ("duration_seconds", models.FloatField(default=0.0)),
                ("cpu_time_seconds", models.FloatField(default=0.0)),
                ("peak_cpu_cores", models.FloatField(default=0.0)),
                ("peak_memory_mb", models.FloatField(default=0.0)),
                ("peak_storage_mb", models.FloatField(default=0.0)),
                (
                    "cpu_efficiency_percent",
                    models.FloatField(
                        default=0.0,
                        help_text="Percentage of allocated CPU actually used",
                    ),
                ),
                (
                    "memory_efficiency_percent",
                    models.FloatField(
                        default=0.0,
                        help_text="Percentage of allocated memory actually used",
                    ),
                ),
                ("collected_at", models.DateTimeField(auto_now_add=True)),
                (
                    "collection_method",
                    models.CharField(
                        default="estimated",
                        help_text="How metrics were collected (estimated, container_stats, cloud_metrics)",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Resource Usage",
                "verbose_name_plural": "Resource Usage Records",
                "ordering": ["-collected_at"],
                "indexes": [
                    models.Index(
                        fields=["job_id"], name="container_m_job_id_eff5df_idx"
                    ),
                    models.Index(
                        fields=["collected_at"], name="container_m_collect_4eac0b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CostRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_id", models.UUIDField(db_index=True)),
                (
                    "cpu_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "memory_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "storage_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "network_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "request_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "startup_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=6, default=Decimal("0"), max_digits=12
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "calculation_method",
                    models.CharField(
                        default="profile_based",
                        help_text="How cost was calculated (profile_based, api_metered, estimated)",
                        max_length=50,
                    ),
                ),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                ("billing_reference", models.CharField(blank=True, max_length=200)),
                (
                    "billed_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Actual amount billed by cloud provider",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("billing_date", models.DateTimeField(blank=True, null=True)),
                (
                    "cost_profile",
                    models.ForeignKey(
                        help_text="Cost profile used for calculation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="container_manager.costprofile",
                    ),
                ),
                (
                    "resource_usage",
                    models.ForeignKey(
                        help_text="Resource usage record used for cost calculation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="container_manager.resourceusage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cost Record",
                "verbose_name_plural": "Cost Records",
                "ordering": ["-calculated_at"],
                "indexes": [
                    models.Index(
                        fields=["job_id"], name="container_m_job_id_9fcb71_idx"
                    ),
                    models.Index(
                        fields=["calculated_at"], name="container_m_calcula_7b945f_idx"
                    ),
                    models.Index(
                        fields=["total_cost"], name="container_m_total_c_9d7a66_idx"
                    ),
                ],
            },
        ),
    ]
