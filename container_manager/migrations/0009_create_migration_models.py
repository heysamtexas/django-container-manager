# Generated by Django 5.2.4 on 2025-07-26 14:41

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("container_manager", "0008_add_performance_monitoring"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MigrationPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Human-readable migration plan name", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Detailed plan description"),
                ),
                (
                    "source_executor_type",
                    models.CharField(
                        help_text="Source executor type (e.g., 'docker')", max_length=50
                    ),
                ),
                (
                    "target_executor_type",
                    models.CharField(
                        help_text="Target executor type (e.g., 'cloudrun')",
                        max_length=50,
                    ),
                ),
                (
                    "job_filter_criteria",
                    models.JSONField(
                        default=dict,
                        help_text="Criteria for selecting jobs to migrate (status, template, etc.)",
                    ),
                ),
                (
                    "migration_strategy",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate Migration"),
                            ("gradual", "Gradual Migration"),
                            ("blue_green", "Blue-Green Migration"),
                            ("canary", "Canary Migration"),
                        ],
                        default="gradual",
                        help_text="Migration strategy to use",
                        max_length=50,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True, help_text="When to start the migration", null=True
                    ),
                ),
                (
                    "max_duration_minutes",
                    models.PositiveIntegerField(
                        default=60, help_text="Maximum migration duration in minutes"
                    ),
                ),
                (
                    "batch_size",
                    models.PositiveIntegerField(
                        default=10, help_text="Number of jobs to migrate per batch"
                    ),
                ),
                (
                    "batch_interval_seconds",
                    models.PositiveIntegerField(
                        default=30, help_text="Seconds between batches"
                    ),
                ),
                (
                    "max_failure_rate_percent",
                    models.FloatField(
                        default=5.0,
                        help_text="Maximum failure rate before aborting migration",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "enable_rollback",
                    models.BooleanField(
                        default=True, help_text="Enable automatic rollback on failure"
                    ),
                ),
                (
                    "validation_timeout_seconds",
                    models.PositiveIntegerField(
                        default=300,
                        help_text="Timeout for job validation after migration",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("running", "Running"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("rolled_back", "Rolled Back"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "total_jobs_selected",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total number of jobs selected for migration",
                    ),
                ),
                (
                    "jobs_migrated",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of jobs successfully migrated"
                    ),
                ),
                (
                    "jobs_failed",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of jobs that failed migration"
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "migration_config",
                    models.JSONField(
                        default=dict, help_text="Detailed migration configuration"
                    ),
                ),
                (
                    "execution_log",
                    models.JSONField(
                        default=list, help_text="Log of migration execution events"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Migration Plan",
                "verbose_name_plural": "Migration Plans",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MigrationMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_duration_seconds",
                    models.PositiveIntegerField(
                        blank=True, help_text="Total migration duration", null=True
                    ),
                ),
                (
                    "avg_job_migration_seconds",
                    models.FloatField(
                        blank=True,
                        help_text="Average time per job migration",
                        null=True,
                    ),
                ),
                (
                    "downtime_seconds",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Total downtime during migration",
                        null=True,
                    ),
                ),
                (
                    "success_rate_percent",
                    models.FloatField(
                        blank=True,
                        help_text="Overall success rate percentage",
                        null=True,
                    ),
                ),
                (
                    "validation_pass_rate_percent",
                    models.FloatField(
                        blank=True,
                        help_text="Validation pass rate percentage",
                        null=True,
                    ),
                ),
                (
                    "performance_delta_percent",
                    models.FloatField(
                        blank=True,
                        help_text="Performance change after migration (+ is improvement)",
                        null=True,
                    ),
                ),
                ("cpu_utilization_before", models.FloatField(blank=True, null=True)),
                ("cpu_utilization_after", models.FloatField(blank=True, null=True)),
                ("memory_utilization_before", models.FloatField(blank=True, null=True)),
                ("memory_utilization_after", models.FloatField(blank=True, null=True)),
                (
                    "cost_delta_percent",
                    models.FloatField(
                        blank=True,
                        help_text="Cost change after migration (+ is increase)",
                        null=True,
                    ),
                ),
                (
                    "network_transfer_mb",
                    models.FloatField(
                        blank=True,
                        help_text="Total network transfer during migration",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "migration_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="container_manager.migrationplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Migration Metrics",
                "verbose_name_plural": "Migration Metrics",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MigrationCheckpoint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Checkpoint name", max_length=100)),
                (
                    "checkpoint_type",
                    models.CharField(
                        choices=[
                            ("start", "Migration Start"),
                            ("batch", "Batch Completion"),
                            ("pause", "Migration Pause"),
                            ("error", "Error State"),
                            ("rollback", "Rollback Point"),
                        ],
                        help_text="Type of checkpoint",
                        max_length=20,
                    ),
                ),
                ("jobs_migrated_count", models.PositiveIntegerField(default=0)),
                ("jobs_failed_count", models.PositiveIntegerField(default=0)),
                ("current_batch", models.PositiveIntegerField(default=0)),
                (
                    "system_state",
                    models.JSONField(
                        default=dict, help_text="System state at checkpoint time"
                    ),
                ),
                (
                    "rollback_data",
                    models.JSONField(
                        default=dict,
                        help_text="Data needed to rollback to this checkpoint",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "migration_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checkpoints",
                        to="container_manager.migrationplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Migration Checkpoint",
                "verbose_name_plural": "Migration Checkpoints",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobMigration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_id", models.UUIDField(help_text="Reference to ContainerJob")),
                ("source_host_name", models.CharField(max_length=100)),
                ("target_host_name", models.CharField(max_length=100)),
                (
                    "source_execution_id",
                    models.CharField(
                        blank=True, help_text="Original execution ID", max_length=200
                    ),
                ),
                (
                    "target_execution_id",
                    models.CharField(
                        blank=True,
                        help_text="New execution ID after migration",
                        max_length=200,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("preparing", "Preparing"),
                            ("migrating", "Migrating"),
                            ("validating", "Validating"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("rolled_back", "Rolled Back"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("success", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                (
                    "migration_metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Migration-specific data and state snapshots",
                    ),
                ),
                (
                    "validation_results",
                    models.JSONField(
                        default=dict, help_text="Results of post-migration validation"
                    ),
                ),
                (
                    "rollback_data",
                    models.JSONField(
                        default=dict, help_text="Data needed for rollback operations"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "migration_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_migrations",
                        to="container_manager.migrationplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Migration",
                "verbose_name_plural": "Job Migrations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MigrationValidation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "validation_type",
                    models.CharField(
                        choices=[
                            ("functional", "Functional Validation"),
                            ("performance", "Performance Validation"),
                            ("health", "Health Check"),
                            ("compatibility", "Compatibility Check"),
                        ],
                        help_text="Type of validation performed",
                        max_length=20,
                    ),
                ),
                ("passed", models.BooleanField(default=False)),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        help_text="Validation score (0-100)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "validation_details",
                    models.JSONField(
                        default=dict, help_text="Detailed validation results"
                    ),
                ),
                (
                    "issues_found",
                    models.JSONField(
                        default=list, help_text="List of issues found during validation"
                    ),
                ),
                (
                    "recommendations",
                    models.JSONField(
                        default=list, help_text="Recommendations for improvement"
                    ),
                ),
                ("validation_started_at", models.DateTimeField(auto_now_add=True)),
                (
                    "validation_completed_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "job_migration",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation",
                        to="container_manager.jobmigration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Migration Validation",
                "verbose_name_plural": "Migration Validations",
                "ordering": ["-validation_started_at"],
            },
        ),
        migrations.AddIndex(
            model_name="migrationplan",
            index=models.Index(
                fields=["status", "scheduled_at"], name="container_m_status_86b4dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="migrationplan",
            index=models.Index(
                fields=["source_executor_type", "target_executor_type"],
                name="container_m_source__930c6e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="migrationplan",
            index=models.Index(
                fields=["created_at"], name="container_m_created_c1e70e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="migrationcheckpoint",
            index=models.Index(
                fields=["migration_plan", "checkpoint_type"],
                name="container_m_migrati_8d3206_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="migrationcheckpoint",
            index=models.Index(
                fields=["created_at"], name="container_m_created_42228f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="jobmigration",
            index=models.Index(
                fields=["migration_plan", "status"],
                name="container_m_migrati_fbf074_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="jobmigration",
            index=models.Index(fields=["job_id"], name="container_m_job_id_c1a551_idx"),
        ),
        migrations.AddIndex(
            model_name="jobmigration",
            index=models.Index(
                fields=["started_at"], name="container_m_started_b4ab68_idx"
            ),
        ),
    ]
